services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: laravel_app
        volumes:
            - .:/var/www/html
        networks:
            - laravel_network
        depends_on:
            mysql:
                condition: service_healthy

    scheduler:
        extends:
            service: app
        container_name: laravel_scheduler
        entrypoint: [ "sh", "-c", "while true; do php artisan schedule:run --verbose --no-interaction & sleep 60; done" ]
        networks:
            - laravel_network

    node:
        image: node:20
        container_name: laravel_node
        working_dir: /var/www/html
        volumes:
            - .:/var/www/html
        command: [ "npm", "run", "docker-dev" ]
        ports:
            - "5173:5173"
        networks:
            - laravel_network
        profiles:
            - frontend

    mysql:
        image: mysql:8.0
        container_name: laravel_mysql
        environment:
            MYSQL_ALLOW_EMPTY_PASSWORD: yes
            MYSQL_DATABASE: laravel
            MYSQL_USER: laravel
            MYSQL_PASSWORD: secret
        volumes:
            - mysql_data:/var/lib/mysql
        networks:
            - laravel_network
        healthcheck:
            test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
            timeout: 5s
            retries: 10

    caddy:
        image: caddy:latest
        container_name: laravel_caddy
        volumes:
            - .:/var/www/html
            - ./Caddyfile:/etc/caddy/Caddyfile
        ports:
            - "80:80"
        networks:
            - laravel_network
        depends_on:
            - app

networks:
    laravel_network:

volumes:
    mysql_data:
